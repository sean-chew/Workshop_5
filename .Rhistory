drop_na()
View(NYC_Income_cleaned)
tm_shape(NYC_Tiles) +
tm_rgb() +
tm_shape(NYC_Income_cleaned) +
tm_polygons(col = "estimate",
alpha = 0.5, palette = "cividis",
title = "Median household income\n2015-2019 ACS") +
tm_layout(legend.outside = TRUE) +
tm_credits("Basemap © Mapbox, © OpenStreetMap", position = c("RIGHT", "BOTTOM"))
tm_shape(NYC_Tiles) +
tm_rgb() +
tm_shape(NYC_Income_cleaned) +
tm_polygons(col = "estimate",
alpha = 0.5, palette = "viridis",
title = "Median household income\n2015-2019 ACS") +
tm_layout(legend.outside = TRUE) +
tm_credits("Basemap © Mapbox, © OpenStreetMap", position = c("RIGHT", "BOTTOM"))
?tracts
ny_tracts <- tracts("NY",c("Kings","Bronx","Queens","Richmond","New York"),cb = TRUE)
NYC_Tiles <- get_static_tiles(
location = ny_tracts,
zoom = 9,
style_id = "light-v9",
username = "mapbox"
# ,
# acces_token = mapbox_token
)
tm_shape(NYC_Tiles) +
tm_rgb() +
tm_shape(NYC_Income_cleaned) +
tm_polygons(col = "estimate",
alpha = 0.5, palette = "viridis",
title = "Median household income\n2015-2019 ACS") +
tm_layout(legend.outside = TRUE) +
tm_credits("Basemap © Mapbox, © OpenStreetMap", position = c("RIGHT", "BOTTOM"))
tm_shape(NYC_Tiles) +
tm_rgb() +
tm_shape(NYC_Income_cleaned) +
tm_polygons(col = "estimate",
alpha = 0.5, palette = "viridis",
title = "Median household income\n2015-2019 ACS",
lwd = .3) +
tm_layout(legend.outside = TRUE) +
tm_credits("Basemap © Mapbox, © OpenStreetMap", position = c("RIGHT", "BOTTOM"))
vector_extract <- get_vector_tiles(
tileset_id = "mapbox.mapbox-streets-v8",
location = c(-73.99405, 40.72033),
zoom = 15
)
ggplot(vector_extract$building$polygons) +
geom_sf() +
theme_void()
tm_shape(vector_extract$building$polygons) +
tm_polygons() +
theme_void()
tm_shape(vector_extract$building$polygons) +
tm_polygons()
names(vector_extract)
tm_shape(vector_extract$structure$polygons) +
tm_polygons()
names(vector_extract)
tm_shape(vector_extract) +
tm_polygons()
View(vector_extract)
tm_shape(vector_extract$landuse$polygons) +
tm_polygons()
tm_shape(vector_extract$landuse$polygons) +
tm_polygons(col = "type")
tmap_mode("view")
tm_shape(vector_extract$landuse$polygons) +
tm_polygons(col = "type")
tm_shape(vector_extract$landuse$polygons) +
tm_polygons(col = "type", alpha = .4)
tm_shape(vector_extract$buildings$polygons) +
tm_polygons(col = "type", alpha = .4)
tm_shape(vector_extract$landuse$polygons) +
tm_polygons(col = "type", alpha = .4)
tm_shape(vector_extract$buildings$polygons) +
tm_polygons(col = "type", alpha = .4)
tm_shape(vector_extract$building$polygons) +
tm_polygons(col = "type", alpha = .4)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13)
library(leaflet)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(vector_extract$road$lines)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(vector_extract$building$polygons)
?addPolygons
vector_extract %>% unnest()
vector_extract %>% unnest(cols = c(building))
vector_extract %>% unnest(cols = c("building"))
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white")
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
width = 2)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
weight = 2)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = vector_extract$building$polygons$type,
weight = 2)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = "type",
weight = 2)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2)
library(rgdal)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2)
?pal
??pal
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~pal(type),
weight = 2)
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = vector_extract$building$polygons, bins = bins)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~pal(type),
weight = 2)
# bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
# pal <- colorBin("YlOrRd", domain = vector_extract$building$polygons, bins = bins)
factpal <- colorFactor(topo.colors(5), vector_extract$building$polygons)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2)
# bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
# pal <- colorBin("YlOrRd", domain = vector_extract$building$polygons, bins = bins)
factpal <- colorFactor(topo.colors(5), vector_extract$building$polygons$type)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2)
vector_extract$building$polygons$type %>% unique()
# bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
# pal <- colorBin("YlOrRd", domain = vector_extract$building$polygons, bins = bins)
factpal <- colorFactor(topo.colors(16), vector_extract$building$polygons$type)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2) %>%
addLegend(pal = factpal, values = ~vector_extract$building$polygons$type, opacity = 1)
vector_extract$building$polygons$type
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2) %>%
addLegend(pal = factpal, values = ~vector_extract$building$polygons$type %>% unique, opacity = 1)
factpal
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2) %>%
addLegend(pal = factpal, values = ~(vector_extract$building$polygons$type %>% unique), opacity = 1)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2) %>%
addLegend(pal = factpal,opacity = 1)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2) %>%
addLegend(pal = factpal,value = ~factpal(type),opacity = 1)
?addLegend
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2) %>%
addLegend(pal = factpal,value = type,opacity = 1)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 13) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2) %>%
addLegend(pal = factpal,value =  vector_extract$building$polygons$type,opacity = 1)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -74.0051,
lat = 40.7251,
zoom = 15) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2) %>%
addLegend(pal = factpal,value =  vector_extract$building$polygons$type,opacity = 1)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -73.99405, #c(-73.99405, 40.72033)
lat = 40.72033,
zoom = 15) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2) %>%
addLegend(pal = factpal,value =  vector_extract$building$polygons$type,opacity = 1)
leaflet() %>%
addMapboxTiles(style_id = "dark-v11",
username = "mapbox") %>%
setView(lng = -73.99405, #c(-73.99405, 40.72033)
lat = 40.72033,
zoom = 16) %>%
addPolygons(data = vector_extract$building$polygons,
popup = vector_extract$building$polygons$type,
color = "white",
fillColor = ~factpal(type),
weight = 2) %>%
addLegend(pal = factpal,value =  vector_extract$building$polygons$type,opacity = 1)
knitr::opts_chunk$set(echo = TRUE)
### Set Environment ------------------------------------------------------------
# Clear the environment
rm(list=ls())
gc()
# So the code will compile warnings as per usual
options(warn = 0)
# Turn off scientific notation
options(scipen = 999)
### Load Packages --------------------------------------------------------------
if(!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse,magrittr,janitor,tidycensus,data.table, ggplot2, scales,skimr,
openxlsx, ggspatial, rgeos, data.table,RColorBrewer, collapse, sf, glue, XML, tm, here,
repurrrsive, tmap,tidygraph, nabor,igraph,viridis,hrbrthemes,RSocrata,soql,Kendall, broom,
knitr,googleway,ggmap,mapsapi,osmdata,tigris,units,mapboxapi,mapdeck)
### Begin Code -----------------------------------------------------------------
isochrones <- mb_isochrone("Chinatown",
time = c(4, 8, 12),
profile = "walking")
mapdeck(style = mapdeck_style("light")) %>%
add_polygon(data = isochrones,
fill_colour = "time",
fill_opacity = 0.5,
legend = TRUE)
mapdeck(style = mapdeck_style("dark")) %>%
add_polygon(data = isochrones,
fill_colour = "time",
fill_opacity = 0.5,
legend = TRUE)
isochrones <- mb_isochrone("Chinatown, NYC",
time = c(4, 8, 12),
profile = "walking")
mapdeck(style = mapdeck_style("dark")) %>%
add_polygon(data = isochrones,
fill_colour = "time",
fill_opacity = 0.5,
legend = TRUE)
isochrones <- mb_isochrone("Chinatown, NYC",
time = c(4, 8, 12),
profile = "biking")
?isochrones
?mb_isochrone
isochrones <- mb_isochrone("Chinatown, NYC",
time = c(4, 8, 12),
profile = "bike")
isochrones <- mb_isochrone("Chinatown, NYC",
time = c(4, 8, 12),
profile = "transit")
isochrones <- mb_isochrone("Chinatown, NYC",
time = c(4, 8, 12),
profile = "cycling")
mapdeck(style = mapdeck_style("dark")) %>%
add_polygon(data = isochrones,
fill_colour = "time",
fill_opacity = 0.5,
legend = TRUE)
knitr::opts_chunk$set(echo = TRUE)
### Set Environment ------------------------------------------------------------
# Clear the environment
rm(list=ls())
gc()
# So the code will compile warnings as per usual
options(warn = 0)
# Turn off scientific notation
options(scipen = 999)
### Load Packages --------------------------------------------------------------
if(!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse,magrittr,janitor,tidycensus,data.table, ggplot2, scales,skimr,
openxlsx, ggspatial, rgeos, data.table,RColorBrewer, collapse, sf, glue, XML, tm, here,
repurrrsive, tmap,tidygraph, nabor,igraph,viridis,hrbrthemes,RSocrata,soql,Kendall, broom,
knitr,googleway,ggmap,mapsapi,osmdata,tigris,units,mapboxapi,mapdeck)
### Begin Code -----------------------------------------------------------------
mapbox_token <- Sys.getenv("MAPBOX_PUBLIC_TOKEN")
ny_tracts <- tracts("NY",c("Kings","Bronx","Queens","Richmond","New York"),cb = TRUE)
NYC_Income <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "NY",
county = c("Kings","Bronx","Queens","Richmond","New York"),
geometry = TRUE,
year = 2019
)
NYC_Income_cleaned  <- NYC_Income %>%
drop_na()
NYC_Tiles <- get_static_tiles(
location = ny_tracts,
zoom = 9,
style_id = "light-v9",
username = "mapbox"
)
tm_shape(NYC_Tiles) +
tm_rgb() +
tm_shape(NYC_Income_cleaned) +
tm_polygons(col = "estimate",
alpha = 0.5, palette = "viridis",
title = "Median household income\n2015-2019 ACS",
lwd = .3) +
tm_layout(legend.outside = TRUE) +
tm_credits("Basemap © Mapbox, © OpenStreetMap", position = c("RIGHT", "BOTTOM"))
vector_extract <- get_vector_tiles(
tileset_id = "mapbox.mapbox-streets-v8",
location = c(-73.99405, 40.72033),
zoom = 15
)
names(vector_extract)
tmap_mode("view")
tm_shape(vector_extract$landuse$polygons) +
tm_polygons(col = "type", alpha = .4)
tm_shape(vector_extract$building$polygons) +
tm_polygons(col = "type", alpha = .4)
# bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
# pal <- colorBin("YlOrRd", domain = vector_extract$building$polygons, bins = bins)
factpal <- colorFactor(topo.colors(16), vector_extract$building$polygons$type)
pacman::p_load(tidyverse,magrittr,janitor,tidycensus,data.table, ggplot2, scales,skimr,
openxlsx, ggspatial, rgeos, data.table,RColorBrewer, collapse, sf, glue, XML, tm, here,
repurrrsive, tmap,tidygraph, nabor,igraph,viridis,hrbrthemes,RSocrata,soql,Kendall, broom,
knitr,googleway,ggmap,mapsapi,osmdata,tigris,units,mapboxapi,mapdeck,leaflet)
if(!require("pacman")) install.packages("pacman")
if(!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse,magrittr,janitor,tidycensus,data.table, ggplot2, scales,skimr,
openxlsx, ggspatial, rgeos, data.table,RColorBrewer, collapse, sf, glue, XML, tm, here,
repurrrsive, tmap,tidygraph, nabor,igraph,viridis,hrbrthemes,RSocrata,soql,Kendall, broom,
knitr,googleway,ggmap,mapsapi,osmdata,tigris,units,mapboxapi,mapdeck,leaflet)
# bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
# pal <- colorBin("YlOrRd", domain = vector_extract$building$polygons, bins = bins)
factpal <- colorFactor(topo.colors(16), vector_extract$building$polygons$type)
